<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="lsh">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="lsh.classpath">
        <pathelement location="bin"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/hadoop-0.20.2-core.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/junit-3.8.1.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/commons-cli-1.2.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/commons-codec-1.3.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/commons-el-1.0.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/commons-httpclient-3.0.1.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/commons-logging-1.0.4.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/commons-logging-api-1.0.4.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/commons-net-1.4.1.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/slf4j-api-1.4.3.jar"/>
        <pathelement location="../../../open/hadoop/hadoop-0.20.2/lib/slf4j-log4j12-1.4.3.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/core">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/hadoop">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/search">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/sample">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src/core"/>
            <classpath refid="lsh.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src/hadoop"/>
            <classpath refid="lsh.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src/search"/>
            <classpath refid="lsh.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src/sample"/>
            <classpath refid="lsh.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="CornerDriver mini">
        <java classname="lsh.hadoop.CornerDriver" failonerror="true" fork="yes">
            <env key="Path" value="c:/java6/jdk20/bin/../jre/bin/client;c:/java6/jdk20/bin/../jre/bin;c:\java6\jdk20\bin;c:\java6\jdk20\jre\bin;C:\jruby-1.4.0\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\Program Files (x86)\jZip;C:\Program Files\SlikSvn\bin\;C:\CUDA\bin;C:\Program Files (x86)\QuickTime\QTSystem\;c:\Users\work\Documents\Apps\apache-ant-1.7.1\bin;C:\Program Files\TortoiseSVN\bin;C:\Program Files\TortoiseGit\bin;C:\Program Files (x86)\Common Files\SYSTEM\MSMAPI\1033;\cygwin\bin"/>
            <arg line="/tmp/IN /tmp/C2P"/>
            <classpath refid="lsh.classpath"/>
        </java>
    </target>
    <target name="ElNinoDriver mini">
        <java classname="lsh.sample.ElNinoDriver" failonerror="true" fork="yes">
            <env key="Path" value="c:/java6/jdk20/bin/../jre/bin/client;c:/java6/jdk20/bin/../jre/bin;c:\java6\jdk20\bin;c:\java6\jdk20\jre\bin;C:\jruby-1.4.0\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\Program Files (x86)\jZip;C:\Program Files\SlikSvn\bin\;C:\CUDA\bin;C:\Program Files (x86)\QuickTime\QTSystem\;c:\Users\work\Documents\Apps\apache-ant-1.7.1\bin;C:\Program Files\TortoiseSVN\bin;C:\Program Files\TortoiseGit\bin;C:\Program Files (x86)\Common Files\SYSTEM\MSMAPI\1033;\cygwin\bin"/>
            <arg line="/tmp/ElNinoDat /tmp/ElNino2C"/>
            <classpath refid="lsh.classpath"/>
        </java>
    </target>
    <target name="ElNinoTextFormat">
        <java classname="lsh.sample.ElNinoTextFormat" failonerror="true" fork="yes">
            <classpath refid="lsh.classpath"/>
        </java>
    </target>
    <target name="Lookup">
        <java classname="lsh.core.Lookup" failonerror="true" fork="yes">
            <arg line="c:/tmp/test/part-r-00000 ortho 2 2.0 one"/>
            <classpath refid="lsh.classpath"/>
        </java>
    </target>
    <target name="PointDriver mini">
        <java classname="lsh.hadoop.PointDriver" failonerror="true" fork="yes">
            <env key="Path" value="c:/java6/jdk20/bin/../jre/bin/client;c:/java6/jdk20/bin/../jre/bin;c:\java6\jdk20\bin;c:\java6\jdk20\jre\bin;C:\jruby-1.4.0\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\Program Files (x86)\jZip;C:\Program Files\SlikSvn\bin\;C:\CUDA\bin;C:\Program Files (x86)\QuickTime\QTSystem\;c:\Users\work\Documents\Apps\apache-ant-1.7.1\bin;C:\Program Files\TortoiseSVN\bin;C:\Program Files\TortoiseGit\bin;C:\Program Files (x86)\Common Files\SYSTEM\MSMAPI\1033;\cygwin\bin"/>
            <arg line="/tmp/IN /tmp/P2C"/>
            <classpath refid="lsh.classpath"/>
        </java>
    </target>
    <target name="GenSVG Counts">
        <java classname="lsh.core.GenSVG" failonerror="true" fork="yes">
            <arg line="/tmp/C2P/part-r-00000 /tmp/counts.svg counts"/>
            <classpath refid="lsh.classpath"/>
        </java>
    </target>
    <target name="GenSVG Lines">
        <java classname="lsh.core.GenSVG" failonerror="true" fork="yes">
            <arg line="/tmp/C2P/part-r-00000 /tmp/points.svg lines"/>
            <classpath refid="lsh.classpath"/>
        </java>
    </target>
    <target name="GenSVG Lines ElNino">
        <java classname="lsh.core.GenSVG" failonerror="true" fork="yes">
            <arg line="/tmp/ElNino2C/part-r-00000 /tmp/EL_points.svg lines"/>
            <classpath refid="lsh.classpath"/>
        </java>
    </target>
    <target name="GenSVG Counts ElNino">
        <java classname="lsh.core.GenSVG" failonerror="true" fork="yes">
            <arg line="/tmp/ElNino2C/part-r-00000 /tmp/EL_counts.svg counts"/>
            <classpath refid="lsh.classpath"/>
        </java>
    </target>
</project>
